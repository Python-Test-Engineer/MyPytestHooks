versions pytest-8.2.0, python-3.12.3.final.0
invocation_dir=C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX
cwd=C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX
args=('.\\tests\\02_sandbox\\test_functions.py::test_fn_example1_pass', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x0000017E46E56270>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x0000017E46E56270>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000017E4724A1E0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000017E4724B710>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
          plugin_name: 1641854589728
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x0000017E46E56270>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=8 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x0000017E47212780>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=10 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x0000017E46782B70>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=6 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\tests\\02_sandbox\\conftest.py'>
          plugin_name: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000017E4724A1E0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000017E4724B710>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x0000017E472B6AE0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x0000017E47267800>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
          plugin_name: 1641854589728
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x0000017E46E56270>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=8 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x0000017E47212780>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=10 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x0000017E46782B70>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=6 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\tests\\02_sandbox\\conftest.py'>
          plugin_name: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000017E4724A1E0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000017E4724B710>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x0000017E472B6AE0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x0000017E47267800>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x0000017E472B6C30>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x0000017E4628DB20>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x0000017E46E56270>
          start_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX
          startdir: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX
      finish pytest_report_header --> [['rootdir: C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX', 'configfile: pytest.ini'], ['using: pytest-8.2.0']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['.\\tests\\02_sandbox\\test_functions.py::test_fn_example1_pass'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=WindowsPath('C:/Users/mrcra/Desktop/Udemy-PyTest/SANDBOX/tests/02_sandbox/test_functions.py'), parts=['test_fn_example1_pass'], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Package SANDBOX> [hook]
            pytest_collectstart [hook]
                collector: <Package SANDBOX>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Package SANDBOX>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\__init__.py
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\__init__.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package SANDBOX>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\__init__.py
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\__init__.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\.pytest_cache
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\README.md
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\README.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package SANDBOX>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\README.md
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\README.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\__pycache__
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\_images
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\_images
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\_images
                  parent: <Package SANDBOX>
              finish pytest_collect_directory --> <Dir _images> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\asides
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\asides
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\asides
                  parent: <Package SANDBOX>
              finish pytest_collect_directory --> <Package asides> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\debug.md
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\debug.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package SANDBOX>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\debug.md
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\debug.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\log
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\log
                  parent: <Package SANDBOX>
              finish pytest_collect_directory --> <Dir log> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\pytest.ini
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\pytest.ini
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package SANDBOX>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\pytest.ini
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\pytest.ini
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\pytestdebug.log
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package SANDBOX>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\pytestdebug.log
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\requirements.txt
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\requirements.txt
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Package SANDBOX>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\requirements.txt
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\requirements.txt
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\src
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\src
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\src
                  parent: <Package SANDBOX>
              finish pytest_collect_directory --> <Package src> [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests
                  parent: <Package SANDBOX>
              finish pytest_collect_directory --> <Dir tests> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\venv
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\venv
              finish pytest_ignore_collect --> True [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=5 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir tests>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir tests>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\01_check_setup
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\01_check_setup
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\01_check_setup
                  parent: <Dir tests>
              finish pytest_collect_directory --> <Package 01_check_setup> [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox
                  parent: <Dir tests>
              finish pytest_collect_directory --> <Dir 02_sandbox> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\03_all_hooks
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\03_all_hooks
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\03_all_hooks
                  parent: <Dir tests>
              finish pytest_collect_directory --> <Dir 03_all_hooks> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\__pycache__
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\__pycache__
              finish pytest_ignore_collect --> True [hook]
            finish pytest_make_collect_report --> <CollectReport 'tests' lenresult=3 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir 02_sandbox>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir 02_sandbox>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\__pycache__
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\cmd.md
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\cmd.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir 02_sandbox>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\cmd.md
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\cmd.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\conftest.py
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\conftest.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir 02_sandbox>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\conftest.py
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\conftest.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x0000017E46E56270>
                  collection_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_class.py
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_class.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir 02_sandbox>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_class.py
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_class.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir 02_sandbox>
                    module_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_class.py
                    path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_class.py
                finish pytest_pycollect_makemodule --> <Module test_class.py> [hook]
              finish pytest_collect_file --> [<Module test_class.py>] [hook]
              pytest_collect_file [hook]
                  parent: <Dir 02_sandbox>
                  file_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_functions.py
                  path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_functions.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir 02_sandbox>
                    module_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_functions.py
                    path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_functions.py
                finish pytest_pycollect_makemodule --> <Module test_functions.py> [hook]
              finish pytest_collect_file --> [<Module test_functions.py>] [hook]
            finish pytest_make_collect_report --> <CollectReport 'tests/02_sandbox' lenresult=2 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Module test_functions.py>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Module test_functions.py>
            find_module called for: test_functions [assertion]
            matched test file (was specified on cmdline): 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\tests\\02_sandbox\\test_functions.py' [assertion]
            found cached rewritten pyc for C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX\tests\02_sandbox\test_functions.py [assertion]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_functions.py>
                  name: @py_builtins
                  obj: <module 'builtins' (built-in)>
              finish pytest_pycollect_makeitem --> None [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_functions.py>
                  name: @pytest_ar
                  obj: <module '_pytest.assertion.rewrite' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
              finish pytest_pycollect_makeitem --> None [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_functions.py>
                  name: pytest
                  obj: <module 'pytest' from 'C:\\Users\\mrcra\\Desktop\\Udemy-PyTest\\SANDBOX\\venv\\Lib\\site-packages\\pytest\\__init__.py'>
              finish pytest_pycollect_makeitem --> None [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_functions.py>
                  name: test_fn_example1_pass
                  obj: <function test_fn_example1_pass at 0x0000017E472F6CA0>
                pytest_generate_tests [hook]
                    metafunc: <_pytest.python.Metafunc object at 0x0000017E4724A870>
                finish pytest_generate_tests --> [] [hook]
              finish pytest_pycollect_makeitem --> [<Function test_fn_example1_pass>] [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_functions.py>
                  name: test_fn_example2_pass
                  obj: <function test_fn_example2_pass at 0x0000017E472F6D40>
                pytest_generate_tests [hook]
                    metafunc: <_pytest.python.Metafunc object at 0x0000017E46863E30>
                finish pytest_generate_tests --> [] [hook]
              finish pytest_pycollect_makeitem --> [<Function test_fn_example2_pass>] [hook]
              pytest_pycollect_makeitem [hook]
                  collector: <Module test_functions.py>
                  name: test_fn_example3_xfail
                  obj: <function test_fn_example3_xfail at 0x0000017E472F6DE0>
                pytest_generate_tests [hook]
                    metafunc: <_pytest.python.Metafunc object at 0x0000017E472496D0>
                finish pytest_generate_tests --> [] [hook]
              finish pytest_pycollect_makeitem --> [<Function test_fn_example3_xfail>] [hook]
            finish pytest_make_collect_report --> <CollectReport 'tests/02_sandbox/test_functions.py' lenresult=3 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Function test_fn_example1_pass> [collection]
      pytest_itemcollected [hook]
          item: <Function test_fn_example1_pass>
      finish pytest_itemcollected --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x0000017E46E56270>
          items: [<Function test_fn_example1_pass>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x0000017E46E56270>
            items: [<Function test_fn_example1_pass>]
            start_path: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX
            startdir: C:\Users\mrcra\Desktop\Udemy-PyTest\SANDBOX
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>
      pytest_runtest_protocol [hook]
          item: <Function test_fn_example1_pass>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/02_sandbox/test_functions.py::test_fn_example1_pass
            location: ('..\\..\\SANDBOX\\tests\\02_sandbox\\test_functions.py', 10, 'test_fn_example1_pass')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_fn_example1_pass>
        early skip of rewriting module: SANDBOX [assertion]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fn_example1_pass>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000017E46E56270>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_fn_example1_pass>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_fn_example1_pass>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fn_example1_pass>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000017E46E56270>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_fn_example1_pass>
            nextitem: None
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_fn_example1_pass>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/02_sandbox/test_functions.py::test_fn_example1_pass' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000017E46E56270>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/02_sandbox/test_functions.py::test_fn_example1_pass
            location: ('..\\..\\SANDBOX\\tests\\02_sandbox\\test_functions.py', 10, 'test_fn_example1_pass')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=0 testsfailed=0 testscollected=1>
        exitstatus: 0
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x0000017E472B6AE0>
          exitstatus: 0
          config: <_pytest.config.Config object at 0x0000017E46E56270>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x0000017E46E56270>
    finish pytest_unconfigure --> [] [hook]
